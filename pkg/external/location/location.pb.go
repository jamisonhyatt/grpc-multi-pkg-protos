// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: location.proto

/*
Package location is a generated protocol buffer package.

It is generated from these files:
	location.proto

It has these top-level messages:
	City
*/
package location

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_FORGOT_ZERO    State = 0
	State_ALABAMA        State = 1
	State_ALASKA         State = 2
	State_ARIZONA        State = 3
	State_ARKANSAS       State = 4
	State_CALIFORNIA     State = 5
	State_COLORADO       State = 6
	State_CONNECTICUT    State = 7
	State_DELAWARE       State = 8
	State_FLORIDA        State = 9
	State_GEORGIA        State = 10
	State_HAWAII         State = 11
	State_IDAHO          State = 12
	State_ILLINOIS       State = 13
	State_INDIANA        State = 14
	State_IOWA           State = 15
	State_KANSAS         State = 16
	State_KENTUCKY       State = 17
	State_LOUISIANA      State = 18
	State_MAINE          State = 19
	State_MARYLAND       State = 20
	State_MASSACHUSETTS  State = 21
	State_MICHIGAN       State = 22
	State_MINNESOTA      State = 23
	State_MISSISSIPPI    State = 24
	State_MISSOURI       State = 25
	State_MONTANA        State = 26
	State_NEBRASKA       State = 27
	State_NEVADA         State = 28
	State_NEW_HAMPSHIRE  State = 29
	State_NEW_JERSEY     State = 30
	State_NEW_MEXICO     State = 31
	State_NEW_YORK       State = 32
	State_NORTH_CAROLINA State = 33
	State_NORTH_DAKOTA   State = 34
	State_OHIO           State = 35
	State_OKLAHOMA       State = 36
	State_OREGON         State = 37
	State_PENNSYLVANIA   State = 38
	State_RHODE_ISLAND   State = 39
	State_SOUTH_CAROLINA State = 40
	State_SOUTH_DAKOTA   State = 41
	State_TENNESSEE      State = 42
	State_TEXAS          State = 43
	State_UTAH           State = 44
	State_VERMONT        State = 45
	State_VIRGINIA       State = 46
	State_WASHINGTON     State = 47
	State_WEST_VIRGINIA  State = 48
	State_WISCONSIN      State = 49
	State_WYOMING        State = 50
)

var State_name = map[int32]string{
	0:  "FORGOT_ZERO",
	1:  "ALABAMA",
	2:  "ALASKA",
	3:  "ARIZONA",
	4:  "ARKANSAS",
	5:  "CALIFORNIA",
	6:  "COLORADO",
	7:  "CONNECTICUT",
	8:  "DELAWARE",
	9:  "FLORIDA",
	10: "GEORGIA",
	11: "HAWAII",
	12: "IDAHO",
	13: "ILLINOIS",
	14: "INDIANA",
	15: "IOWA",
	16: "KANSAS",
	17: "KENTUCKY",
	18: "LOUISIANA",
	19: "MAINE",
	20: "MARYLAND",
	21: "MASSACHUSETTS",
	22: "MICHIGAN",
	23: "MINNESOTA",
	24: "MISSISSIPPI",
	25: "MISSOURI",
	26: "MONTANA",
	27: "NEBRASKA",
	28: "NEVADA",
	29: "NEW_HAMPSHIRE",
	30: "NEW_JERSEY",
	31: "NEW_MEXICO",
	32: "NEW_YORK",
	33: "NORTH_CAROLINA",
	34: "NORTH_DAKOTA",
	35: "OHIO",
	36: "OKLAHOMA",
	37: "OREGON",
	38: "PENNSYLVANIA",
	39: "RHODE_ISLAND",
	40: "SOUTH_CAROLINA",
	41: "SOUTH_DAKOTA",
	42: "TENNESSEE",
	43: "TEXAS",
	44: "UTAH",
	45: "VERMONT",
	46: "VIRGINIA",
	47: "WASHINGTON",
	48: "WEST_VIRGINIA",
	49: "WISCONSIN",
	50: "WYOMING",
}
var State_value = map[string]int32{
	"FORGOT_ZERO":    0,
	"ALABAMA":        1,
	"ALASKA":         2,
	"ARIZONA":        3,
	"ARKANSAS":       4,
	"CALIFORNIA":     5,
	"COLORADO":       6,
	"CONNECTICUT":    7,
	"DELAWARE":       8,
	"FLORIDA":        9,
	"GEORGIA":        10,
	"HAWAII":         11,
	"IDAHO":          12,
	"ILLINOIS":       13,
	"INDIANA":        14,
	"IOWA":           15,
	"KANSAS":         16,
	"KENTUCKY":       17,
	"LOUISIANA":      18,
	"MAINE":          19,
	"MARYLAND":       20,
	"MASSACHUSETTS":  21,
	"MICHIGAN":       22,
	"MINNESOTA":      23,
	"MISSISSIPPI":    24,
	"MISSOURI":       25,
	"MONTANA":        26,
	"NEBRASKA":       27,
	"NEVADA":         28,
	"NEW_HAMPSHIRE":  29,
	"NEW_JERSEY":     30,
	"NEW_MEXICO":     31,
	"NEW_YORK":       32,
	"NORTH_CAROLINA": 33,
	"NORTH_DAKOTA":   34,
	"OHIO":           35,
	"OKLAHOMA":       36,
	"OREGON":         37,
	"PENNSYLVANIA":   38,
	"RHODE_ISLAND":   39,
	"SOUTH_CAROLINA": 40,
	"SOUTH_DAKOTA":   41,
	"TENNESSEE":      42,
	"TEXAS":          43,
	"UTAH":           44,
	"VERMONT":        45,
	"VIRGINIA":       46,
	"WASHINGTON":     47,
	"WEST_VIRGINIA":  48,
	"WISCONSIN":      49,
	"WYOMING":        50,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptorLocation, []int{0} }

type City struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State State  `protobuf:"varint,2,opt,name=state,proto3,enum=location.State" json:"state,omitempty"`
}

func (m *City) Reset()                    { *m = City{} }
func (m *City) String() string            { return proto.CompactTextString(m) }
func (*City) ProtoMessage()               {}
func (*City) Descriptor() ([]byte, []int) { return fileDescriptorLocation, []int{0} }

func (m *City) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *City) GetState() State {
	if m != nil {
		return m.State
	}
	return State_FORGOT_ZERO
}

func init() {
	proto.RegisterType((*City)(nil), "location.City")
	proto.RegisterEnum("location.State", State_name, State_value)
}

func init() { proto.RegisterFile("location.proto", fileDescriptorLocation) }

var fileDescriptorLocation = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x53, 0xeb, 0x52, 0x2a, 0x47,
	0x10, 0x0e, 0x06, 0x14, 0x46, 0xc5, 0x76, 0x72, 0x33, 0x77, 0x63, 0x62, 0x62, 0x4c, 0x80, 0xc4,
	0x3c, 0x41, 0xbb, 0x3b, 0xee, 0x76, 0xd8, 0x9d, 0xa6, 0x66, 0x16, 0x56, 0xfc, 0x43, 0xa1, 0x45,
	0x21, 0x47, 0xb9, 0x94, 0xae, 0x55, 0xc7, 0x57, 0x3e, 0x4f, 0x71, 0xaa, 0x17, 0xb5, 0x4e, 0x15,
	0x3f, 0x98, 0xfe, 0xfa, 0xbb, 0xcc, 0xb7, 0x35, 0xaa, 0x79, 0xbf, 0xbc, 0x19, 0x17, 0xb3, 0xe5,
	0xa2, 0xbd, 0x7a, 0x58, 0x16, 0x4b, 0x5d, 0x7f, 0x3d, 0x1f, 0xa1, 0xaa, 0x06, 0xb3, 0xe2, 0x59,
	0x6b, 0x55, 0x5d, 0x8c, 0xe7, 0x93, 0x83, 0xca, 0x61, 0xe5, 0xa4, 0xe1, 0xca, 0xff, 0xfa, 0x58,
	0xd5, 0x1e, 0x8b, 0x71, 0x31, 0x39, 0xd8, 0x38, 0xac, 0x9c, 0x34, 0xcf, 0xf6, 0xda, 0x6f, 0x2a,
	0x5e, 0xc6, 0x6e, 0x8d, 0x9e, 0x7e, 0xa8, 0xa9, 0x5a, 0x39, 0xd0, 0x7b, 0x6a, 0xfb, 0x82, 0x5d,
	0xc4, 0xd9, 0xe8, 0xca, 0x38, 0x86, 0xcf, 0xf4, 0xb6, 0xda, 0xc2, 0x04, 0xcf, 0x31, 0x45, 0xa8,
	0x68, 0xa5, 0x36, 0x31, 0x41, 0xdf, 0x45, 0xd8, 0x28, 0x01, 0x47, 0x57, 0x6c, 0x11, 0x3e, 0xd7,
	0x3b, 0xaa, 0x8e, 0xae, 0x8b, 0xd6, 0xa3, 0x87, 0xaa, 0x6e, 0x2a, 0x15, 0x60, 0x42, 0x17, 0xec,
	0x2c, 0x21, 0xd4, 0x04, 0x0d, 0x38, 0x61, 0x87, 0x21, 0xc3, 0xa6, 0x58, 0x04, 0x6c, 0xad, 0x09,
	0x32, 0x0a, 0xfa, 0x19, 0x6c, 0x09, 0x1c, 0x9a, 0x04, 0x73, 0x74, 0x06, 0xea, 0xa2, 0x7b, 0x91,
	0xb0, 0xa3, 0x10, 0xa1, 0x21, 0x87, 0xc8, 0xb0, 0x8b, 0x08, 0x41, 0x89, 0x7b, 0x8c, 0x39, 0x12,
	0xc1, 0xb6, 0x6e, 0xa8, 0x1a, 0x85, 0x18, 0x33, 0xec, 0x08, 0x9d, 0x92, 0x84, 0x2c, 0x93, 0x87,
	0x5d, 0x61, 0x90, 0x0d, 0x09, 0x2d, 0x42, 0x53, 0xd7, 0x55, 0x95, 0x38, 0x47, 0xd8, 0x13, 0xee,
	0x4b, 0x3c, 0x10, 0x42, 0xd7, 0xd8, 0xac, 0x1f, 0x74, 0x87, 0xb0, 0xaf, 0x77, 0x55, 0x23, 0xe1,
	0x3e, 0xf9, 0x92, 0xa2, 0x45, 0x38, 0x45, 0xb2, 0x06, 0xbe, 0x90, 0xbd, 0x14, 0xdd, 0x30, 0x41,
	0x1b, 0xc2, 0x97, 0x7a, 0x5f, 0xed, 0xa6, 0xe8, 0x3d, 0x06, 0x71, 0xdf, 0x9b, 0x2c, 0xf3, 0xf0,
	0x55, 0xb9, 0x40, 0x41, 0x4c, 0x11, 0x5a, 0xf8, 0x5a, 0x84, 0x52, 0xb2, 0xd6, 0x78, 0xce, 0x10,
	0xbe, 0x91, 0x6b, 0xa6, 0xe4, 0xbd, 0xfc, 0x7a, 0x3d, 0x82, 0x83, 0xf5, 0xb6, 0xf7, 0xdc, 0x77,
	0x04, 0xdf, 0x4a, 0xce, 0x94, 0x6d, 0x26, 0xa6, 0xdf, 0x09, 0x64, 0xcd, 0xb9, 0x2b, 0x9b, 0xfd,
	0x5e, 0xb2, 0x5a, 0x33, 0xc0, 0x10, 0xe1, 0x07, 0x71, 0xb5, 0x26, 0x1f, 0xc5, 0x98, 0xf6, 0x7c,
	0x4c, 0xce, 0xc0, 0x8f, 0xd2, 0xae, 0x8c, 0xfe, 0x37, 0xce, 0x9b, 0x21, 0xfc, 0xf4, 0x7a, 0x4e,
	0xcd, 0x25, 0x05, 0x0c, 0x3f, 0xaf, 0xc5, 0xf2, 0xd1, 0x90, 0x5d, 0x17, 0x0e, 0xb5, 0x56, 0x4d,
	0xcb, 0x2e, 0x8b, 0x47, 0x01, 0x3a, 0x4e, 0xc8, 0x22, 0xfc, 0xa2, 0x41, 0xed, 0xac, 0x67, 0x21,
	0x76, 0x25, 0xec, 0x91, 0x14, 0xc5, 0x31, 0x31, 0xfc, 0x2a, 0x6c, 0xee, 0x26, 0x18, 0x73, 0x8a,
	0xf0, 0x9b, 0x44, 0x61, 0x67, 0x22, 0xb6, 0x70, 0x2c, 0xac, 0x9e, 0xb1, 0xd6, 0x0f, 0x93, 0x01,
	0xca, 0x77, 0xfd, 0x5d, 0x26, 0x2e, 0xe6, 0xd0, 0x8c, 0xc8, 0x97, 0x25, 0xfd, 0x21, 0x6e, 0x9e,
	0xfb, 0x9f, 0xba, 0x9d, 0xc8, 0xd6, 0x7a, 0xf6, 0xe2, 0xf6, 0xa7, 0x34, 0x95, 0x19, 0x69, 0xca,
	0x1b, 0x03, 0xa7, 0x52, 0x79, 0x66, 0x2e, 0xd1, 0xc3, 0x5f, 0x92, 0xa3, 0x9f, 0x61, 0x0c, 0x7f,
	0x4b, 0x3f, 0x03, 0xe3, 0xa4, 0x22, 0x68, 0x49, 0xa8, 0x01, 0xb9, 0x88, 0xc4, 0xb6, 0x2d, 0x17,
	0xce, 0xd1, 0xc7, 0x64, 0xa3, 0x8c, 0x2d, 0x74, 0xa4, 0xa3, 0xdc, 0xf8, 0x6c, 0xf4, 0xb6, 0xf2,
	0x8f, 0x38, 0xe4, 0xe4, 0x03, 0xb6, 0x9e, 0x2c, 0xfc, 0x2b, 0x62, 0xf9, 0x90, 0x53, 0xb2, 0x11,
	0x9c, 0x9d, 0x9b, 0xab, 0x60, 0x3a, 0x2b, 0x6e, 0x9f, 0xae, 0xdb, 0x37, 0xcb, 0x79, 0xe7, 0xdd,
	0x78, 0x3e, 0x7b, 0x5c, 0x2e, 0x6e, 0x9f, 0xc7, 0x45, 0xd1, 0x99, 0x3e, 0xac, 0x6e, 0x5a, 0xf3,
	0xa7, 0xfb, 0x62, 0xd6, 0x5a, 0xdd, 0x4d, 0x5b, 0xe5, 0x4b, 0x7b, 0xec, 0xac, 0xee, 0xa6, 0x9d,
	0xc9, 0xfb, 0x62, 0xf2, 0xb0, 0x18, 0xdf, 0x77, 0x5e, 0x1f, 0xd0, 0xf5, 0x66, 0x89, 0xfe, 0xf7,
	0x31, 0x00, 0x00, 0xff, 0xff, 0x39, 0xf0, 0x27, 0x94, 0x99, 0x03, 0x00, 0x00,
}
